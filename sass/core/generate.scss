@import "./defaults";

@mixin _prismjs-theme-core--print-css-vars ($map, $prefix: '') {
	@each $var, $value in $map {
		@if $value {
			#{$prefix + '--' + $var}: $value;
		}
	}
}

@mixin _prismjs-theme-core--get-values ($map, $prefix: '') {
	@each $property, $value in $map {
		@if $value {
			@if $prismjs-theme-core--use-css-variables == 1 {
				#{$property}: $value;
				#{$property}: var(#{$prefix + '--' + $property}); // sass-lint:disable-line no-duplicate-properties
			} @else if $prismjs-theme-core--use-css-variables == 2 {
				#{$property}: var(#{$prefix + '--' + $property});
			} @else {
				#{$property}: $value;
			}
		}
	}
}

@mixin prismjs-theme-core--generate () {
	@if ($prismjs-theme-core--use-css-variables != 0) {
		:root {
			@include _prismjs-theme-core--print-css-vars($prismjs-theme-core--base, --prismjs-theme-core--base);
			@include _prismjs-theme-core--print-css-vars($prismjs-theme-core--selection, --prismjs-theme-core--selection);
			@include _prismjs-theme-core--print-css-vars($prismjs-theme-core--pre, --prismjs-theme-core--pre);
			@include _prismjs-theme-core--print-css-vars($prismjs-theme-core--code, --prismjs-theme-core--code);
			@include _prismjs-theme-core--print-css-vars($prismjs-theme-core--namespace, --prismjs-theme-core--namespace);

			@include _prismjs-theme-core--print-css-vars--token-atrule();
			@include _prismjs-theme-core--print-css-vars--token-attr-name();
			@include _prismjs-theme-core--print-css-vars--token-attr-value();
			@include _prismjs-theme-core--print-css-vars--token-attribute();
			@include _prismjs-theme-core--print-css-vars--token-boolean();
			@include _prismjs-theme-core--print-css-vars--token-builtin();
			@include _prismjs-theme-core--print-css-vars--token-cdata();
			@include _prismjs-theme-core--print-css-vars--token-char();
			@include _prismjs-theme-core--print-css-vars--token-class();
			@include _prismjs-theme-core--print-css-vars--token-class-name();
			@include _prismjs-theme-core--print-css-vars--token-comment();
			@include _prismjs-theme-core--print-css-vars--token-constant();
			@include _prismjs-theme-core--print-css-vars--token-deleted();
			@include _prismjs-theme-core--print-css-vars--token-doctype();
			@include _prismjs-theme-core--print-css-vars--token-entity();
			@include _prismjs-theme-core--print-css-vars--token-hexcode();
			@include _prismjs-theme-core--print-css-vars--token-function();
			@include _prismjs-theme-core--print-css-vars--token-id();
			@include _prismjs-theme-core--print-css-vars--token-important();
			@include _prismjs-theme-core--print-css-vars--token-inserted();
			@include _prismjs-theme-core--print-css-vars--token-keyword();
			@include _prismjs-theme-core--print-css-vars--token-number();
			@include _prismjs-theme-core--print-css-vars--token-operator();
			@include _prismjs-theme-core--print-css-vars--token-prolog();
			@include _prismjs-theme-core--print-css-vars--token-property();
			@include _prismjs-theme-core--print-css-vars--token-pseudo-class();
			@include _prismjs-theme-core--print-css-vars--token-pseudo-element();
			@include _prismjs-theme-core--print-css-vars--token-punctuation();
			@include _prismjs-theme-core--print-css-vars--token-regex();
			@include _prismjs-theme-core--print-css-vars--token-selector();
			@include _prismjs-theme-core--print-css-vars--token-string();
			@include _prismjs-theme-core--print-css-vars--token-symbol();
			@include _prismjs-theme-core--print-css-vars--token-tag();
			@include _prismjs-theme-core--print-css-vars--token-url();
			@include _prismjs-theme-core--print-css-vars--token-variable();
		}
	}

	%base {
		@include _prismjs-theme-core--get-values($prismjs-theme-core--base, --prismjs-theme-core--base);
		text-align: left;
		white-space: pre;
		word-spacing: normal;
		word-break: normal;
		word-wrap: normal;
		hyphens: none;

		&::-moz-selection,
		& ::-moz-selection {
			@include _prismjs-theme-core--get-values($prismjs-theme-core--selection, --prismjs-theme-core--selection);
			text-shadow: none;
			opacity: 1;
		}

		&::selection,
		& ::selection {
			@include _prismjs-theme-core--get-values($prismjs-theme-core--selection, --prismjs-theme-core--selection);
			text-shadow: none;
			opacity: 1;
		}

		@media print {
			text-shadow: none !important; // sass-lint:disable-line no-important
		}
	}

	[class*="language-"] {
		@at-root code#{&} {
			@extend %base;

			:not(pre) > & {
				@include _prismjs-theme-core--get-values($prismjs-theme-core--code, --prismjs-theme-core--code);
				white-space: normal;
			}

			pre > & {
				background: none;
			}
		}

		@at-root pre#{&} {
			@extend %base;
			@include _prismjs-theme-core--get-values($prismjs-theme-core--pre, --prismjs-theme-core--pre);
			overflow: auto;
		}

		.namespace {
			@include _prismjs-theme-core--get-values($prismjs-theme-core--namespace, --prismjs-theme-core--namespace);
		}
	}

	.token {
		&.atrule {
			@include _prismjs-theme-core--get-values--token-atrule();
		}

		&.attr-name {
			@include _prismjs-theme-core--get-values--token-attr-name();
		}

		&.attr-value {
			@include _prismjs-theme-core--get-values--token-attr-value();
		}

		&.attribute {
			@include _prismjs-theme-core--get-values--token-attribute();
		}

		&.boolean {
			@include _prismjs-theme-core--get-values--token-boolean();
		}

		&.builtin {
			@include _prismjs-theme-core--get-values--token-builtin();
		}

		&.cdata {
			@include _prismjs-theme-core--get-values--token-cdata();
		}

		&.char {
			@include _prismjs-theme-core--get-values--token-char();
		}

		&.class {
			@include _prismjs-theme-core--get-values--token-class();
		}

		&.class-name {
			@include _prismjs-theme-core--get-values--token-class-name();
		}

		&.comment {
			@include _prismjs-theme-core--get-values--token-comment();
		}

		&.constant {
			@include _prismjs-theme-core--get-values--token-constant();
		}

		&.deleted {
			@include _prismjs-theme-core--get-values--token-deleted();
		}

		&.doctype {
			@include _prismjs-theme-core--get-values--token-doctype();
		}

		&.entity {
			@include _prismjs-theme-core--get-values--token-entity();
		}

		&.function {
			@include _prismjs-theme-core--get-values--token-function();
		}

		&.hexcode {
			@include _prismjs-theme-core--get-values--token-hexcode();
		}

		&.id {
			@include _prismjs-theme-core--get-values--token-id();
		}

		&.important {
			@include _prismjs-theme-core--get-values--token-important();
		}

		&.inserted {
			@include _prismjs-theme-core--get-values--token-inserted();
		}

		&.keyword {
			@include _prismjs-theme-core--get-values--token-keyword();
		}

		&.number {
			@include _prismjs-theme-core--get-values--token-number();
		}

		&.operator {
			@include _prismjs-theme-core--get-values--token-operator();
		}

		&.prolog {
			@include _prismjs-theme-core--get-values--token-prolog();
		}

		&.property {
			@include _prismjs-theme-core--get-values--token-property();
		}

		&.pseudo-class {
			@include _prismjs-theme-core--get-values--token-pseudo-class();
		}

		&.pseudo-element {
			@include _prismjs-theme-core--get-values--token-pseudo-element();
		}

		&.punctuation {
			@include _prismjs-theme-core--get-values--token-punctuation();
		}

		&.regex {
			@include _prismjs-theme-core--get-values--token-regex();
		}

		&.selector {
			@include _prismjs-theme-core--get-values--token-selector();
		}

		&.string {
			@include _prismjs-theme-core--get-values--token-string();
		}

		&.symbol {
			@include _prismjs-theme-core--get-values--token-symbol();
		}

		&.tag {
			@include _prismjs-theme-core--get-values--token-tag();
		}

		&.url {
			@include _prismjs-theme-core--get-values--token-url();
		}

		&.variable {
			@include _prismjs-theme-core--get-values--token-variable();
		}

		&.bold {
			font-weight: bold;
		}

		&.italic {
			font-weight: italic;
		}
	}
}
